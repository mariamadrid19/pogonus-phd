#SBATCH --cluster=genius 
#SBATCH --job-name GWAS 
#SBATCH --nodes=1 
#SBATCH --ntasks-per-node=20
#SBATCH --time=72:00:00 
#SBATCH -A lp_svbelleghem
#SBATCH -o GWAS.%j.out

SOURCE_DIR=/data/leuven/357/vsc35707/miniconda3/etc/profile.d/conda.sh
# This is the directory where the conda.sh script is located in your account
POPULATION=Nieuwpoort
PHENOTYPE_FILE=phenos.txt
FAMILY_IDS=sample_fids.txt
SEXES=sex.txt
# These files need to be one column with the same number of samples as the VCF file, and they will be added to the fam file. They need to be created BEFOREHAND


#LOAD ALL THE NECESSARY PACKAGES
source $SOURCE_DIR
module load tabix/0.2.6-GCCcore-6.4.0
module load Python/3.7.0-foss-2018a
module load Java/11.0.20
module load PLINK/1.9
export BCFTOOLS_PLUGINS=/data/leuven/357/vsc35707/bcftools/plugins
# Need to install bcftools beforehand and say where the plugins are installed

echo
echo "*** Pipeline for running a simple GWAS analysis based on WGS/RADtag data and quantitative phenotypes ***"
echo

# Start with a VCF file with called SNPs, make sure the sample names do not contain any underscores ("_") or any other symbols that might interfere with downstream analyses

echo
echo "*** Check missingness per individual ***"
echo

conda activate vcftools

vcftools --gzvcf $POPULATION.vcf.gz --missing-indv

echo
echo "*** Filter your VCF file ***"
echo

vcftools --gzvcf $POPULATION.vcf.gz --max-missing 0.9 --minQ 30 --maf 0.05 --remove-indels --recode --stdout | bgzip > filtered_$POPULATION.vcf.gz
# At least 90% of individuals must have a called genotype
# Minimum quality score of 30
# Minor allele frequency (MAF) threshold of 0.05
# Exclude indels, keeping only SNPs

# Index VCF file
tabix -p vcf filtered_$POPULATION.vcf.gz

echo
echo "*** Split multiallelic SNPs ***"
echo

# Split the multiallelic SNPs into multiple biallelic ones
bcftools norm -m -any -o split_$POPULATION.vcf.gz -Oz filtered_$POPULATION.vcf.gz

echo
echo "*** Impute missing genotypes ***"
echo

java -Xmx20480m -jar /data/leuven/357/vsc35707/beagle.27Feb25.75f.jar gt=split_$POPULATION.vcf.gz out=imputed_$POPULATION

# Index the imputed vcf file 
bcftools index -t imputed_$POPULATION.vcf.gz

# Gives a brief summary of stats, imputed genotypes 
bcftools stats imputed_$POPULATION.vcf.gz | grep -E "SN|TSTV"

echo
echo "*** Create PLINK files for GWAS ***"
echo

plink --vcf imputed_$POPULATION.vcf.gz --allow-no-sex --make-bed --allow-extra-chr --out $POPULATION


## These steps are performed to manually add the phenotype, family ID, and sex information to the .fam file generated by PLINK
# These files need to be one column with the same number of samples as the VCF file, and they will be added to the fam file. They need to be created BEFOREHAND

mv $POPULATION.fam no_pheno_$POPULATION.fam

# Add phenotypes with awk from phenos.txt file (phenos, just the quantitative values)
awk 'NR==FNR {phenotype[NR]=$1; next} {print $1, $2, $3, $4, $5, phenotype[FNR]}' $PHENOTYPE_FILE no_pheno_$POPULATION.fam > with_pheno_$POPULATION.fam

# Add the family IDs if relevant from the fids.txt file
awk 'NR==FNR {fid[NR]=$1; next} {print fid[FNR], $2, $3, $4, $5, $6}' $FAMILY_IDS with_pheno_$POPULATION.fam > with_pheno_updated_$POPULATION.fam

# Add sex if relevant from the sex.txt file 
awk 'NR==FNR {sex[NR]=$1; next} {print $1, $2, $3, $4, sex[FNR], $6}' $SEXES with_pheno_updated_$POPULATION.fam > $POPULATION.fam

echo
echo "*** Run the LMM GWAS ***"
echo

conda deactivate
conda activate gemma

# Generate a kinship matrix
gemma -bfile $POPULATION -gk 1 -outdir kinship_matrix -o $POPULATION

# Perform the GWAS with phenotype file and kinship matrix
gemma -bfile $POPULATION -k kinship_matrix/$POPULATION.cXX.txt -lmm 4 -outdir gemma_results -o $POPULATION
